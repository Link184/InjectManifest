// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.uploadInfo = [
            'userOrg' : 'why8n',
            'groupId' : 'com.whyn',
            'website' : 'https://github.com/Why8n/InjectManifest',
            'licences': ['Apache-2.0'],
    ]
    ext.versions = [
            'injectmanifest_annotations_version': '1.0.0',
            'injectmanifest_compiler_version'   : '1.1.0',
            'injectmanifest_plugin_version'     : '1.3.0',

            'bintrayRelease'                    : '0.5.0',

            'minSdk'                            : 18,
            'compileSdk'                        : 29,
            'versionCode'                       : 1,
            'versionName'                       : '1.0',

            'supportLibrary'                    : '26.0.0-alpha1',
            'androidPlugin'                     : '3.3.1',

            'constraint'                        : '1.0.1'
    ]
    ext.deps = [
            android  : [
                    'gradlePlugin': "com.android.tools.build:gradle:${versions.androidPlugin}",
            ],
            'support': [
                    'compat'     : "com.android.support:appcompat-v7:${versions.supportLibrary}",
                    'annotations': "com.android.support:support-annotations:${versions.supportLibrary}",
            ],
            junit    : 'junit:junit:4.12',
            'auto'   : [
                    'service': 'com.google.auto.service:auto-service:1.0-rc3',
            ],
            layout   : [
                    'constraint': "com.android.support.constraint:constraint-layout:${versions.constraint}"
            ],
    ]

    repositories {
        google()
        jcenter()
//        maven {//本地Maven仓库地址
//            url uri('D:/Android/repos')
//        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:${versions.androidPlugin}"
        classpath 'com.link184:injectmanifest-plugin:0.1.1-SNAPSHOT'

        classpath "com.novoda:bintray-release:${versions.bintrayRelease}"
//        classpath "com.whyn:injectmanifest-plugin:${versions.injectmanifest_plugin_version}"

        classpath "gradle.plugin.com.dorongold.plugins:task-tree:1.3"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}


subprojects { project ->
    if (project.name != 'sample') {

        project.task('upload2jcenter', type: Exec) {
            group = "whyn"
            description = "upload module to jcenter by bintray-release"

            def cmdProc;
            if (System.getProperty('os.name').toLowerCase().contains('windows')) {
                cmdProc = ['cmd', '/c']
            } else {
                cmdProc = ['./sh']
            }

            File bintrayFile = rootProject.file('bintray.properties')
            if (bintrayFile.exists()) {
                Properties properties = new Properties()
                properties.load(new FileInputStream(bintrayFile))
                workingDir rootProject.projectDir.absolutePath
                def userName =properties['userName']
                def bintrayKey =properties['bintrayKey']
                cmdProc += ['gradlew.bat',
                            'clean',
                            'build',
                            "${project.name}:bintrayUpload",
                            "-PbintrayUser=$userName",
                            "-PbintrayKey=$bintrayKey",
                            '-PdryRun=false']
                commandLine cmdProc
            } else {
                cmdProc += "echo failed to upload:${project.name},no bintray.properties found"
                commandLine cmdProc
            }
        }
    }
}
