apply plugin: 'com.android.application'
//apply plugin: 'com.whyn.plugin.injectmanifest'

//manifestConfig {
//    //the defautl AndroidManifest.xml path
//    originManifestPath android.sourceSets.main.manifest.srcFile.absolutePath
//
//    //the AndroidManifest.xml path generated by annotation processor
//    genManifestPath "$project.buildDir/generated/source/apt/debug/Collections.xml"
//
//    //to save the original AndroidManifest: true -- save,false -- not save
//    saveOrigin false
//}

android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools
//    sourceSets {
//        main {
//            manifest.srcFile "$project.projectDir/src/main/AndroidManifestOld.xml"
//        }
//    }
    defaultConfig {
        applicationId "com.yn.injectmanifest"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.compileSdk
        versionCode versions.versionCode
        versionName versions.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

//        javaCompileOptions {
//            annotationProcessorOptions {
//                arguments = [AndroidManifestPath: android.sourceSets.main.manifest.srcFile.getAbsolutePath()]
//            }
//        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile deps.support.compat
    compile deps.layout.constraint
    testCompile deps.junit
//
    provided project(':injectmanifest-annotations')
    annotationProcessor project(':injectmanifest-compiler')
}
